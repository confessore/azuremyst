// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using azuremyst.contexts;

#nullable disable

namespace azuremyst.Migrations.CharacterDb
{
    [DbContext(typeof(CharacterDbContext))]
    [Migration("20220516211724_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_general_ci")
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("azuremyst.models.characters.AccountDatum", b =>
                {
                    b.Property<uint>("Account")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("account");

                    b.Property<uint>("Type")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("type");

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("longblob")
                        .HasColumnName("data");

                    b.Property<ulong>("Time")
                        .HasColumnType("bigint(11) unsigned")
                        .HasColumnName("time");

                    b.HasKey("Account", "Type")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.ToTable("account_data", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.characters.AccountInstancesEntered", b =>
                {
                    b.Property<uint>("AccountId")
                        .HasColumnType("int(11) unsigned")
                        .HasComment("Player account");

                    b.Property<uint>("InstanceId")
                        .HasColumnType("int(11) unsigned")
                        .HasComment("ID of instance entered");

                    b.Property<long>("ExpireTime")
                        .HasColumnType("bigint(40)")
                        .HasComment("Time when instance was entered");

                    b.HasKey("AccountId", "InstanceId")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.ToTable("account_instances_entered", (string)null);

                    b.HasComment("Instance reset limit system");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.characters.AhbotItem", b =>
                {
                    b.Property<uint>("Item")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("item")
                        .HasComment("Item Identifier");

                    b.Property<uint>("AddChance")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("add_chance")
                        .HasComment("Chance item is added to AH upon bot visit, 0 for normal loot sources");

                    b.Property<uint>("MaxAmount")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("max_amount")
                        .HasComment("Max amount added, not used when add_chance is 0");

                    b.Property<uint>("MinAmount")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("min_amount")
                        .HasComment("Min amount added, not used when add_chance is 0");

                    b.Property<uint>("Value")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("value")
                        .HasComment("Item value, a value of 0 bans item from being sold/bought by AHBot");

                    b.HasKey("Item")
                        .HasName("PRIMARY");

                    b.ToTable("ahbot_items", (string)null);

                    b.HasComment("AuctionHouseBot overridden item settings");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.characters.ArenaTeam", b =>
                {
                    b.Property<uint>("Arenateamid")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("arenateamid");

                    b.Property<uint>("BackgroundColor")
                        .HasColumnType("int(10) unsigned");

                    b.Property<uint>("BorderColor")
                        .HasColumnType("int(10) unsigned");

                    b.Property<uint>("BorderStyle")
                        .HasColumnType("int(10) unsigned");

                    b.Property<uint>("Captainguid")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("captainguid");

                    b.Property<uint>("EmblemColor")
                        .HasColumnType("int(10) unsigned");

                    b.Property<uint>("EmblemStyle")
                        .HasColumnType("int(10) unsigned");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("char(255)")
                        .HasColumnName("name")
                        .IsFixedLength();

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasColumnName("type");

                    b.HasKey("Arenateamid");

                    b.ToTable("arena_team", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.characters.ArenaTeamMember", b =>
                {
                    b.Property<uint>("Arenateamid")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("arenateamid");

                    b.Property<uint>("Guid")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("guid");

                    b.Property<uint>("PersonalRating")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("personal_rating");

                    b.Property<uint>("PlayedSeason")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("played_season");

                    b.Property<uint>("PlayedWeek")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("played_week");

                    b.Property<uint>("WonsSeason")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("wons_season");

                    b.Property<uint>("WonsWeek")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("wons_week");

                    b.HasKey("Arenateamid", "Guid")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.ToTable("arena_team_member", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.characters.ArenaTeamStat", b =>
                {
                    b.Property<uint>("Arenateamid")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("arenateamid");

                    b.Property<uint>("GamesSeason")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("games_season");

                    b.Property<uint>("GamesWeek")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("games_week");

                    b.Property<uint>("Rank")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("rank");

                    b.Property<uint>("Rating")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("rating");

                    b.Property<uint>("WinsSeason")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("wins_season");

                    b.Property<uint>("WinsWeek")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("wins_week");

                    b.HasKey("Arenateamid")
                        .HasName("PRIMARY");

                    b.ToTable("arena_team_stats", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.characters.Auction", b =>
                {
                    b.Property<uint>("Id")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("id");

                    b.Property<uint>("Buyguid")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("buyguid");

                    b.Property<int>("Buyoutprice")
                        .HasColumnType("int(11)")
                        .HasColumnName("buyoutprice");

                    b.Property<int>("Deposit")
                        .HasColumnType("int(11)")
                        .HasColumnName("deposit");

                    b.Property<uint>("Houseid")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("houseid");

                    b.Property<uint>("ItemCount")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("item_count");

                    b.Property<int>("ItemRandompropertyid")
                        .HasColumnType("int(11)")
                        .HasColumnName("item_randompropertyid");

                    b.Property<uint>("ItemTemplate")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("item_template")
                        .HasComment("Item Identifier");

                    b.Property<uint>("Itemguid")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("itemguid");

                    b.Property<uint>("Itemowner")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("itemowner");

                    b.Property<int>("Lastbid")
                        .HasColumnType("int(11)")
                        .HasColumnName("lastbid");

                    b.Property<int>("Startbid")
                        .HasColumnType("int(11)")
                        .HasColumnName("startbid");

                    b.Property<ulong>("Time")
                        .HasColumnType("bigint(40) unsigned")
                        .HasColumnName("time");

                    b.HasKey("Id");

                    b.ToTable("auction", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.characters.Bugreport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id")
                        .HasComment("Identifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("content");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.ToTable("bugreport", (string)null);

                    b.HasComment("Debug System");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.characters.Character", b =>
                {
                    b.Property<uint>("Guid")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("guid")
                        .HasComment("Global Unique Identifier");

                    b.Property<uint>("Account")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("account")
                        .HasComment("Account Identifier");

                    b.Property<byte>("ActionBars")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasColumnName("actionBars");

                    b.Property<uint>("AmmoId")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("ammoId");

                    b.Property<uint>("ArenaPoints")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("arenaPoints");

                    b.Property<uint>("AtLogin")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("at_login");

                    b.Property<uint>("ChosenTitle")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("chosenTitle");

                    b.Property<byte>("Cinematic")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasColumnName("cinematic");

                    b.Property<byte>("Class")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasColumnName("class");

                    b.Property<ulong>("DeathExpireTime")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("death_expire_time");

                    b.Property<ulong?>("DeleteDate")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("deleteDate");

                    b.Property<uint?>("DeleteInfosAccount")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("deleteInfos_Account");

                    b.Property<string>("DeleteInfosName")
                        .HasMaxLength(12)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("deleteInfos_Name");

                    b.Property<ushort>("Drunk")
                        .HasColumnType("smallint(5) unsigned")
                        .HasColumnName("drunk");

                    b.Property<byte>("DungeonDifficulty")
                        .HasColumnType("tinyint(1) unsigned")
                        .HasColumnName("dungeon_difficulty");

                    b.Property<string>("EquipmentCache")
                        .HasColumnType("longtext")
                        .HasColumnName("equipmentCache");

                    b.Property<string>("ExploredZones")
                        .HasColumnType("longtext")
                        .HasColumnName("exploredZones");

                    b.Property<uint>("ExtraFlags")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("extra_flags");

                    b.Property<byte>("Gender")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasColumnName("gender");

                    b.Property<uint?>("GrantableLevels")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("grantableLevels")
                        .HasDefaultValueSql("'0'");

                    b.Property<uint>("Health")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("health");

                    b.Property<byte>("IsLogoutResting")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasColumnName("is_logout_resting");

                    b.Property<string>("KnownTitles")
                        .HasColumnType("longtext")
                        .HasColumnName("knownTitles");

                    b.Property<byte>("Level")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasColumnName("level");

                    b.Property<uint>("Leveltime")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("leveltime");

                    b.Property<ulong>("LogoutTime")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("logout_time");

                    b.Property<uint>("Map")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("map")
                        .HasComment("Map Identifier");

                    b.Property<uint>("Money")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("money");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(12)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("name")
                        .HasDefaultValueSql("''");

                    b.Property<byte>("Online")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasColumnName("online");

                    b.Property<float>("Orientation")
                        .HasColumnType("float")
                        .HasColumnName("orientation");

                    b.Property<uint>("PlayerBytes")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("playerBytes");

                    b.Property<uint>("PlayerBytes2")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("playerBytes2");

                    b.Property<uint>("PlayerFlags")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("playerFlags");

                    b.Property<float>("PositionX")
                        .HasColumnType("float")
                        .HasColumnName("position_x");

                    b.Property<float>("PositionY")
                        .HasColumnType("float")
                        .HasColumnName("position_y");

                    b.Property<float>("PositionZ")
                        .HasColumnType("float")
                        .HasColumnName("position_z");

                    b.Property<uint>("Power1")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("power1");

                    b.Property<uint>("Power2")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("power2");

                    b.Property<uint>("Power3")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("power3");

                    b.Property<uint>("Power4")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("power4");

                    b.Property<uint>("Power5")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("power5");

                    b.Property<byte>("Race")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasColumnName("race");

                    b.Property<uint>("ResettalentsCost")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("resettalents_cost");

                    b.Property<ulong>("ResettalentsTime")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("resettalents_time");

                    b.Property<float>("RestBonus")
                        .HasColumnType("float")
                        .HasColumnName("rest_bonus");

                    b.Property<byte>("StableSlots")
                        .HasColumnType("tinyint(1) unsigned")
                        .HasColumnName("stable_slots");

                    b.Property<string>("TaxiPath")
                        .HasColumnType("text")
                        .HasColumnName("taxi_path");

                    b.Property<string>("Taximask")
                        .HasColumnType("longtext")
                        .HasColumnName("taximask");

                    b.Property<uint>("TodayHonorPoints")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("todayHonorPoints");

                    b.Property<ushort>("TodayKills")
                        .HasColumnType("smallint(5) unsigned")
                        .HasColumnName("todayKills");

                    b.Property<uint>("TotalHonorPoints")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("totalHonorPoints");

                    b.Property<uint>("TotalKills")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("totalKills");

                    b.Property<uint>("Totaltime")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("totaltime");

                    b.Property<float>("TransO")
                        .HasColumnType("float")
                        .HasColumnName("trans_o");

                    b.Property<float>("TransX")
                        .HasColumnType("float")
                        .HasColumnName("trans_x");

                    b.Property<float>("TransY")
                        .HasColumnType("float")
                        .HasColumnName("trans_y");

                    b.Property<float>("TransZ")
                        .HasColumnType("float")
                        .HasColumnName("trans_z");

                    b.Property<ulong>("Transguid")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("transguid");

                    b.Property<uint>("WatchedFaction")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("watchedFaction");

                    b.Property<uint>("Xp")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("xp");

                    b.Property<uint>("YesterdayHonorPoints")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("yesterdayHonorPoints");

                    b.Property<ushort>("YesterdayKills")
                        .HasColumnType("smallint(5) unsigned")
                        .HasColumnName("yesterdayKills");

                    b.Property<uint>("Zone")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("zone");

                    b.HasKey("Guid")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Account" }, "idx_account");

                    b.HasIndex(new[] { "Name" }, "idx_name");

                    b.HasIndex(new[] { "Online" }, "idx_online");

                    b.ToTable("characters", (string)null);

                    b.HasComment("Player System");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.characters.CharacterAccountDatum", b =>
                {
                    b.Property<uint>("Guid")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("guid");

                    b.Property<uint>("Type")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("type");

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("longblob")
                        .HasColumnName("data");

                    b.Property<ulong>("Time")
                        .HasColumnType("bigint(11) unsigned")
                        .HasColumnName("time");

                    b.HasKey("Guid", "Type")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.ToTable("character_account_data", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.characters.CharacterAction", b =>
                {
                    b.Property<uint>("Guid")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("guid")
                        .HasComment("Global Unique Identifier");

                    b.Property<byte>("Button")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasColumnName("button");

                    b.Property<uint>("Action")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("action");

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasColumnName("type");

                    b.HasKey("Guid", "Button")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.ToTable("character_action", (string)null);

                    b.HasComment("Player System");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.characters.CharacterAura", b =>
                {
                    b.Property<uint>("Guid")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("guid")
                        .HasComment("Global Unique Identifier");

                    b.Property<ulong>("CasterGuid")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("caster_guid")
                        .HasComment("Full Global Unique Identifier");

                    b.Property<uint>("ItemGuid")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("item_guid");

                    b.Property<uint>("Spell")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("spell");

                    b.Property<int>("Basepoints0")
                        .HasColumnType("int(11)")
                        .HasColumnName("basepoints0");

                    b.Property<int>("Basepoints1")
                        .HasColumnType("int(11)")
                        .HasColumnName("basepoints1");

                    b.Property<int>("Basepoints2")
                        .HasColumnType("int(11)")
                        .HasColumnName("basepoints2");

                    b.Property<uint>("EffIndexMask")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("effIndexMask");

                    b.Property<int>("Maxduration")
                        .HasColumnType("int(11)")
                        .HasColumnName("maxduration");

                    b.Property<uint>("Periodictime0")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("periodictime0");

                    b.Property<uint>("Periodictime1")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("periodictime1");

                    b.Property<uint>("Periodictime2")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("periodictime2");

                    b.Property<uint>("Remaincharges")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("remaincharges");

                    b.Property<int>("Remaintime")
                        .HasColumnType("int(11)")
                        .HasColumnName("remaintime");

                    b.Property<uint>("Stackcount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("stackcount")
                        .HasDefaultValueSql("'1'");

                    b.HasKey("Guid", "CasterGuid", "ItemGuid", "Spell")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0, 0, 0 });

                    b.ToTable("character_aura", (string)null);

                    b.HasComment("Player System");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.characters.CharacterBattlegroundDatum", b =>
                {
                    b.Property<uint>("Guid")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("guid")
                        .HasComment("Global Unique Identifier");

                    b.Property<uint>("InstanceId")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("instance_id");

                    b.Property<int>("JoinMap")
                        .HasColumnType("int(11)")
                        .HasColumnName("join_map");

                    b.Property<float>("JoinO")
                        .HasColumnType("float")
                        .HasColumnName("join_o");

                    b.Property<float>("JoinX")
                        .HasColumnType("float")
                        .HasColumnName("join_x");

                    b.Property<float>("JoinY")
                        .HasColumnType("float")
                        .HasColumnName("join_y");

                    b.Property<float>("JoinZ")
                        .HasColumnType("float")
                        .HasColumnName("join_z");

                    b.Property<uint>("Team")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("team");

                    b.HasKey("Guid")
                        .HasName("PRIMARY");

                    b.ToTable("character_battleground_data", (string)null);

                    b.HasComment("Player System");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.characters.CharacterDbVersion", b =>
                {
                    b.Property<ulong?>("RequiredS242901CharactersRaf")
                        .HasColumnType("bit(1)")
                        .HasColumnName("required_s2429_01_characters_raf");

                    b.ToTable("character_db_version", (string)null);

                    b.HasComment("Last applied sql update to DB");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.characters.CharacterDeclinedname", b =>
                {
                    b.Property<uint>("Guid")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("guid")
                        .HasComment("Global Unique Identifier");

                    b.Property<string>("Accusative")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("accusative")
                        .HasDefaultValueSql("''");

                    b.Property<string>("Dative")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("dative")
                        .HasDefaultValueSql("''");

                    b.Property<string>("Genitive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("genitive")
                        .HasDefaultValueSql("''");

                    b.Property<string>("Instrumental")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("instrumental")
                        .HasDefaultValueSql("''");

                    b.Property<string>("Prepositional")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("prepositional")
                        .HasDefaultValueSql("''");

                    b.HasKey("Guid")
                        .HasName("PRIMARY");

                    b.ToTable("character_declinedname", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.characters.CharacterGift", b =>
                {
                    b.Property<uint>("ItemGuid")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("item_guid");

                    b.Property<uint>("Entry")
                        .HasColumnType("int(20) unsigned")
                        .HasColumnName("entry");

                    b.Property<uint>("Flags")
                        .HasColumnType("int(20) unsigned")
                        .HasColumnName("flags");

                    b.Property<uint>("Guid")
                        .HasColumnType("int(20) unsigned")
                        .HasColumnName("guid");

                    b.HasKey("ItemGuid")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Guid" }, "idx_guid");

                    b.ToTable("character_gifts", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.characters.CharacterHomebind", b =>
                {
                    b.Property<uint>("Guid")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("guid")
                        .HasComment("Global Unique Identifier");

                    b.Property<uint>("Map")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("map")
                        .HasComment("Map Identifier");

                    b.Property<float>("PositionX")
                        .HasColumnType("float")
                        .HasColumnName("position_x");

                    b.Property<float>("PositionY")
                        .HasColumnType("float")
                        .HasColumnName("position_y");

                    b.Property<float>("PositionZ")
                        .HasColumnType("float")
                        .HasColumnName("position_z");

                    b.Property<uint>("Zone")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("zone")
                        .HasComment("Zone Identifier");

                    b.HasKey("Guid")
                        .HasName("PRIMARY");

                    b.ToTable("character_homebind", (string)null);

                    b.HasComment("Player System");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.characters.CharacterInstance", b =>
                {
                    b.Property<uint>("Guid")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("guid");

                    b.Property<uint>("Instance")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("instance");

                    b.Property<byte>("Permanent")
                        .HasColumnType("tinyint(1) unsigned")
                        .HasColumnName("permanent");

                    b.HasKey("Guid", "Instance")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex(new[] { "Instance" }, "instance");

                    b.ToTable("character_instance", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.characters.CharacterInventory", b =>
                {
                    b.Property<uint>("Item")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("item")
                        .HasComment("Item Global Unique Identifier");

                    b.Property<uint>("Bag")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("bag");

                    b.Property<uint>("Guid")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("guid")
                        .HasComment("Global Unique Identifier");

                    b.Property<uint>("ItemTemplate")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("item_template")
                        .HasComment("Item Identifier");

                    b.Property<byte>("Slot")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasColumnName("slot");

                    b.HasKey("Item")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Guid" }, "idx_guid")
                        .HasDatabaseName("idx_guid1");

                    b.ToTable("character_inventory", (string)null);

                    b.HasComment("Player System");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.characters.CharacterPet", b =>
                {
                    b.Property<uint>("Id")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("id");

                    b.Property<string>("Abdata")
                        .HasColumnType("longtext")
                        .HasColumnName("abdata");

                    b.Property<uint>("CreatedBySpell")
                        .HasColumnType("int(11) unsigned");

                    b.Property<uint>("Curhappiness")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("curhappiness");

                    b.Property<uint>("Curhealth")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("curhealth")
                        .HasDefaultValueSql("'1'");

                    b.Property<uint>("Curmana")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("curmana");

                    b.Property<uint>("Entry")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("entry");

                    b.Property<uint>("Exp")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("exp");

                    b.Property<uint>("Level")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("level")
                        .HasDefaultValueSql("'1'");

                    b.Property<uint>("Loyalty")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("loyalty");

                    b.Property<int>("Loyaltypoints")
                        .HasColumnType("int(11)")
                        .HasColumnName("loyaltypoints");

                    b.Property<uint?>("Modelid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("modelid")
                        .HasDefaultValueSql("'0'");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name")
                        .HasDefaultValueSql("'Pet'");

                    b.Property<uint>("Owner")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("owner");

                    b.Property<byte>("PetType")
                        .HasColumnType("tinyint(3) unsigned");

                    b.Property<byte>("Reactstate")
                        .HasColumnType("tinyint(1) unsigned");

                    b.Property<byte>("Renamed")
                        .HasColumnType("tinyint(1) unsigned")
                        .HasColumnName("renamed");

                    b.Property<uint>("ResettalentsCost")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("resettalents_cost");

                    b.Property<ulong>("ResettalentsTime")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("resettalents_time");

                    b.Property<ulong>("Savetime")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("savetime");

                    b.Property<uint>("Slot")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("slot");

                    b.Property<string>("Teachspelldata")
                        .HasColumnType("longtext")
                        .HasColumnName("teachspelldata");

                    b.Property<int>("Trainpoint")
                        .HasColumnType("int(11)")
                        .HasColumnName("trainpoint");

                    b.Property<uint>("XpForNextLoyalty")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("xpForNextLoyalty");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Owner" }, "owner");

                    b.ToTable("character_pet", (string)null);

                    b.HasComment("Pet System");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.characters.CharacterPetDeclinedname", b =>
                {
                    b.Property<uint>("Id")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("id");

                    b.Property<string>("Accusative")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(12)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("accusative")
                        .HasDefaultValueSql("''");

                    b.Property<string>("Dative")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(12)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("dative")
                        .HasDefaultValueSql("''");

                    b.Property<string>("Genitive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(12)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("genitive")
                        .HasDefaultValueSql("''");

                    b.Property<string>("Instrumental")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(12)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("instrumental")
                        .HasDefaultValueSql("''");

                    b.Property<uint>("Owner")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("owner");

                    b.Property<string>("Prepositional")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(12)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("prepositional")
                        .HasDefaultValueSql("''");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Owner" }, "owner_key");

                    b.ToTable("character_pet_declinedname", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.characters.CharacterQueststatus", b =>
                {
                    b.Property<uint>("Guid")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("guid")
                        .HasComment("Global Unique Identifier");

                    b.Property<uint>("Quest")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("quest")
                        .HasComment("Quest Identifier");

                    b.Property<byte>("Explored")
                        .HasColumnType("tinyint(1) unsigned")
                        .HasColumnName("explored");

                    b.Property<uint>("Itemcount1")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("itemcount1");

                    b.Property<uint>("Itemcount2")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("itemcount2");

                    b.Property<uint>("Itemcount3")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("itemcount3");

                    b.Property<uint>("Itemcount4")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("itemcount4");

                    b.Property<uint>("Mobcount1")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("mobcount1");

                    b.Property<uint>("Mobcount2")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("mobcount2");

                    b.Property<uint>("Mobcount3")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("mobcount3");

                    b.Property<uint>("Mobcount4")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("mobcount4");

                    b.Property<byte>("Rewarded")
                        .HasColumnType("tinyint(1) unsigned")
                        .HasColumnName("rewarded");

                    b.Property<uint>("Status")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("status");

                    b.Property<ulong>("Timer")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("timer");

                    b.HasKey("Guid", "Quest")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.ToTable("character_queststatus", (string)null);

                    b.HasComment("Player System");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.characters.CharacterQueststatusDaily", b =>
                {
                    b.Property<uint>("Guid")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("guid")
                        .HasComment("Global Unique Identifier");

                    b.Property<uint>("Quest")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("quest")
                        .HasComment("Quest Identifier");

                    b.HasKey("Guid", "Quest")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.ToTable("character_queststatus_daily", (string)null);

                    b.HasComment("Player System");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.characters.CharacterQueststatusMonthly", b =>
                {
                    b.Property<uint>("Guid")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("guid")
                        .HasComment("Global Unique Identifier");

                    b.Property<uint>("Quest")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("quest")
                        .HasComment("Quest Identifier");

                    b.HasKey("Guid", "Quest")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.ToTable("character_queststatus_monthly", (string)null);

                    b.HasComment("Player System");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.characters.CharacterQueststatusWeekly", b =>
                {
                    b.Property<uint>("Guid")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("guid")
                        .HasComment("Global Unique Identifier");

                    b.Property<uint>("Quest")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("quest")
                        .HasComment("Quest Identifier");

                    b.HasKey("Guid", "Quest")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.ToTable("character_queststatus_weekly", (string)null);

                    b.HasComment("Player System");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.characters.CharacterReputation", b =>
                {
                    b.Property<uint>("Guid")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("guid")
                        .HasComment("Global Unique Identifier");

                    b.Property<uint>("Faction")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("faction");

                    b.Property<int>("Flags")
                        .HasColumnType("int(11)")
                        .HasColumnName("flags");

                    b.Property<int>("Standing")
                        .HasColumnType("int(11)")
                        .HasColumnName("standing");

                    b.HasKey("Guid", "Faction")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.ToTable("character_reputation", (string)null);

                    b.HasComment("Player System");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.characters.CharacterSkill", b =>
                {
                    b.Property<uint>("Guid")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("guid")
                        .HasComment("Global Unique Identifier");

                    b.Property<uint>("Skill")
                        .HasColumnType("mediumint(9) unsigned")
                        .HasColumnName("skill");

                    b.Property<uint>("Max")
                        .HasColumnType("mediumint(9) unsigned")
                        .HasColumnName("max");

                    b.Property<uint>("Value")
                        .HasColumnType("mediumint(9) unsigned")
                        .HasColumnName("value");

                    b.HasKey("Guid", "Skill")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.ToTable("character_skills", (string)null);

                    b.HasComment("Player System");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.characters.CharacterSocial", b =>
                {
                    b.Property<uint>("Guid")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("guid")
                        .HasComment("Character Global Unique Identifier");

                    b.Property<uint>("Friend")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("friend")
                        .HasComment("Friend Global Unique Identifier");

                    b.Property<byte>("Flags")
                        .HasColumnType("tinyint(1) unsigned")
                        .HasColumnName("flags")
                        .HasComment("Friend Flags");

                    b.Property<string>("Note")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(48)
                        .HasColumnType("varchar(48)")
                        .HasColumnName("note")
                        .HasDefaultValueSql("''")
                        .HasComment("Friend Note");

                    b.HasKey("Guid", "Friend", "Flags")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0, 0 });

                    b.HasIndex(new[] { "Friend", "Flags" }, "friend_flags");

                    b.HasIndex(new[] { "Guid", "Flags" }, "guid_flags");

                    b.ToTable("character_social", (string)null);

                    b.HasComment("Player System");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.characters.CharacterSpell", b =>
                {
                    b.Property<uint>("Guid")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("guid")
                        .HasComment("Global Unique Identifier");

                    b.Property<uint>("Spell")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("spell")
                        .HasComment("Spell Identifier");

                    b.Property<byte>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(3) unsigned")
                        .HasColumnName("active")
                        .HasDefaultValueSql("'1'");

                    b.Property<byte>("Disabled")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasColumnName("disabled");

                    b.HasKey("Guid", "Spell")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex(new[] { "Spell" }, "Idx_spell");

                    b.ToTable("character_spell", (string)null);

                    b.HasComment("Player System");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.characters.CharacterSpellCooldown", b =>
                {
                    b.Property<uint>("Guid")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("guid")
                        .HasComment("Global Unique Identifier, Low part");

                    b.Property<uint>("SpellId")
                        .HasColumnType("int(11) unsigned")
                        .HasComment("Spell Identifier");

                    b.Property<uint>("Category")
                        .HasColumnType("int(11) unsigned")
                        .HasComment("Spell category");

                    b.Property<ulong>("CategoryExpireTime")
                        .HasColumnType("bigint(20) unsigned")
                        .HasComment("Spell category cooldown expire time");

                    b.Property<uint>("ItemId")
                        .HasColumnType("int(11) unsigned")
                        .HasComment("Item Identifier");

                    b.Property<ulong>("SpellExpireTime")
                        .HasColumnType("bigint(20) unsigned")
                        .HasComment("Spell cooldown expire time");

                    b.HasKey("Guid", "SpellId")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.ToTable("character_spell_cooldown", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.characters.CharacterStat", b =>
                {
                    b.Property<uint>("Guid")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("guid")
                        .HasComment("Global Unique Identifier, Low part");

                    b.Property<uint>("Agility")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("agility");

                    b.Property<uint>("Armor")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("armor");

                    b.Property<uint>("AttackPower")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("attackPower");

                    b.Property<float>("BlockPct")
                        .HasColumnType("float unsigned")
                        .HasColumnName("blockPct");

                    b.Property<float>("CritPct")
                        .HasColumnType("float unsigned")
                        .HasColumnName("critPct");

                    b.Property<float>("DodgePct")
                        .HasColumnType("float unsigned")
                        .HasColumnName("dodgePct");

                    b.Property<uint>("Intellect")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("intellect");

                    b.Property<uint>("Maxhealth")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("maxhealth");

                    b.Property<uint>("Maxpower1")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("maxpower1");

                    b.Property<uint>("Maxpower2")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("maxpower2");

                    b.Property<uint>("Maxpower3")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("maxpower3");

                    b.Property<uint>("Maxpower4")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("maxpower4");

                    b.Property<uint>("Maxpower5")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("maxpower5");

                    b.Property<uint>("Maxpower6")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("maxpower6");

                    b.Property<uint>("Maxpower7")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("maxpower7");

                    b.Property<float>("ParryPct")
                        .HasColumnType("float unsigned")
                        .HasColumnName("parryPct");

                    b.Property<uint>("RangedAttackPower")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("rangedAttackPower");

                    b.Property<float>("RangedCritPct")
                        .HasColumnType("float unsigned")
                        .HasColumnName("rangedCritPct");

                    b.Property<uint>("ResArcane")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("resArcane");

                    b.Property<uint>("ResFire")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("resFire");

                    b.Property<uint>("ResFrost")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("resFrost");

                    b.Property<uint>("ResHoly")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("resHoly");

                    b.Property<uint>("ResNature")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("resNature");

                    b.Property<uint>("ResShadow")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("resShadow");

                    b.Property<float>("SpellCritPct")
                        .HasColumnType("float unsigned")
                        .HasColumnName("spellCritPct");

                    b.Property<uint>("SpellPower")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("spellPower");

                    b.Property<uint>("Spirit")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("spirit");

                    b.Property<uint>("Stamina")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("stamina");

                    b.Property<uint>("Strength")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("strength");

                    b.HasKey("Guid")
                        .HasName("PRIMARY");

                    b.ToTable("character_stats", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.characters.CharacterTutorial", b =>
                {
                    b.Property<ulong>("Account")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("account")
                        .HasComment("Account Identifier");

                    b.Property<uint>("Tut0")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("tut0");

                    b.Property<uint>("Tut1")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("tut1");

                    b.Property<uint>("Tut2")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("tut2");

                    b.Property<uint>("Tut3")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("tut3");

                    b.Property<uint>("Tut4")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("tut4");

                    b.Property<uint>("Tut5")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("tut5");

                    b.Property<uint>("Tut6")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("tut6");

                    b.Property<uint>("Tut7")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("tut7");

                    b.HasKey("Account")
                        .HasName("PRIMARY");

                    b.ToTable("character_tutorial", (string)null);

                    b.HasComment("Player System");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.characters.Corpse", b =>
                {
                    b.Property<uint>("Guid")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("guid")
                        .HasComment("Global Unique Identifier");

                    b.Property<byte>("CorpseType")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasColumnName("corpse_type");

                    b.Property<uint>("Instance")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("instance");

                    b.Property<uint>("Map")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("map")
                        .HasComment("Map Identifier");

                    b.Property<float>("Orientation")
                        .HasColumnType("float")
                        .HasColumnName("orientation");

                    b.Property<uint>("Player")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("player")
                        .HasComment("Character Global Unique Identifier");

                    b.Property<float>("PositionX")
                        .HasColumnType("float")
                        .HasColumnName("position_x");

                    b.Property<float>("PositionY")
                        .HasColumnType("float")
                        .HasColumnName("position_y");

                    b.Property<float>("PositionZ")
                        .HasColumnType("float")
                        .HasColumnName("position_z");

                    b.Property<ulong>("Time")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("time");

                    b.HasKey("Guid")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Player" }, "Idx_player");

                    b.HasIndex(new[] { "Time" }, "Idx_time");

                    b.HasIndex(new[] { "CorpseType" }, "idx_type");

                    b.HasIndex(new[] { "Instance" }, "instance")
                        .HasDatabaseName("instance1");

                    b.ToTable("corpse", (string)null);

                    b.HasComment("Death System");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.characters.CreatureRespawn", b =>
                {
                    b.Property<uint>("Guid")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("guid")
                        .HasComment("Global Unique Identifier");

                    b.Property<uint>("Instance")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("mediumint(8) unsigned")
                        .HasColumnName("instance")
                        .HasDefaultValueSql("'0'");

                    b.Property<ulong>("Respawntime")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("respawntime");

                    b.HasKey("Guid", "Instance")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex(new[] { "Instance" }, "instance")
                        .HasDatabaseName("instance2");

                    b.ToTable("creature_respawn", (string)null);

                    b.HasComment("Grid Loading System");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.characters.EventGroupChosen", b =>
                {
                    b.Property<uint>("EventGroup")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("mediumint(8) unsigned")
                        .HasColumnName("eventGroup")
                        .HasDefaultValueSql("'0'");

                    b.Property<uint>("Entry")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("mediumint(8) unsigned")
                        .HasColumnName("entry")
                        .HasDefaultValueSql("'0'");

                    b.HasKey("EventGroup", "Entry")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.ToTable("event_group_chosen", (string)null);

                    b.HasComment("Quest Group picked");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.characters.GameEventStatus", b =>
                {
                    b.Property<ushort>("Event")
                        .HasColumnType("smallint(6) unsigned")
                        .HasColumnName("event");

                    b.HasKey("Event")
                        .HasName("PRIMARY");

                    b.ToTable("game_event_status", (string)null);

                    b.HasComment("Game event system");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.characters.GameobjectRespawn", b =>
                {
                    b.Property<uint>("Guid")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("guid")
                        .HasComment("Global Unique Identifier");

                    b.Property<uint>("Instance")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("mediumint(8) unsigned")
                        .HasColumnName("instance")
                        .HasDefaultValueSql("'0'");

                    b.Property<ulong>("Respawntime")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("respawntime");

                    b.HasKey("Guid", "Instance")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex(new[] { "Instance" }, "instance")
                        .HasDatabaseName("instance3");

                    b.ToTable("gameobject_respawn", (string)null);

                    b.HasComment("Grid Loading System");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.characters.GmSurvey", b =>
                {
                    b.Property<uint>("Ticketid")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("ticketid")
                        .HasComment("GM Ticket's unique identifier");

                    b.Property<byte?>("Answer1")
                        .HasColumnType("tinyint(2) unsigned")
                        .HasColumnName("answer1");

                    b.Property<byte?>("Answer10")
                        .HasColumnType("tinyint(2) unsigned")
                        .HasColumnName("answer10");

                    b.Property<byte?>("Answer2")
                        .HasColumnType("tinyint(2) unsigned")
                        .HasColumnName("answer2");

                    b.Property<byte?>("Answer3")
                        .HasColumnType("tinyint(2) unsigned")
                        .HasColumnName("answer3");

                    b.Property<byte?>("Answer4")
                        .HasColumnType("tinyint(2) unsigned")
                        .HasColumnName("answer4");

                    b.Property<byte?>("Answer5")
                        .HasColumnType("tinyint(2) unsigned")
                        .HasColumnName("answer5");

                    b.Property<byte?>("Answer6")
                        .HasColumnType("tinyint(2) unsigned")
                        .HasColumnName("answer6");

                    b.Property<byte?>("Answer7")
                        .HasColumnType("tinyint(2) unsigned")
                        .HasColumnName("answer7");

                    b.Property<byte?>("Answer8")
                        .HasColumnType("tinyint(2) unsigned")
                        .HasColumnName("answer8");

                    b.Property<byte?>("Answer9")
                        .HasColumnType("tinyint(2) unsigned")
                        .HasColumnName("answer9");

                    b.Property<string>("Comment")
                        .HasColumnType("text")
                        .HasColumnName("comment")
                        .HasComment("Player's feedback");

                    b.Property<uint>("Surveyid")
                        .HasColumnType("int(2) unsigned")
                        .HasColumnName("surveyid")
                        .HasComment("Survey DBC entry's identifier");

                    b.HasKey("Ticketid")
                        .HasName("PRIMARY");

                    b.ToTable("gm_surveys", (string)null);

                    b.HasComment("GM Tickets System");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.characters.GmTicket", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("id")
                        .HasComment("GM Ticket's unique identifier");

                    b.Property<ulong>("Answered")
                        .HasColumnType("bigint(40) unsigned")
                        .HasColumnName("answered")
                        .HasComment("Timestamp: ticket's last time answered by a GM");

                    b.Property<uint>("AssigneeGuid")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("assignee_guid")
                        .HasComment("Assignee's character's Global Unique Identifier");

                    b.Property<string>("AssigneeName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(12)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("assignee_name")
                        .HasDefaultValueSql("''")
                        .HasComment("Assignee's character's name");

                    b.Property<uint>("AuthorGuid")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("author_guid")
                        .HasComment("Player's character Global Unique Identifier");

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("author_name")
                        .HasComment("Player's character name");

                    b.Property<byte>("Category")
                        .HasColumnType("tinyint(2) unsigned")
                        .HasColumnName("category")
                        .HasComment("GM Ticket Category DBC entry's identifier");

                    b.Property<ulong>("Closed")
                        .HasColumnType("bigint(40) unsigned")
                        .HasColumnName("closed")
                        .HasComment("Timestamp: ticket closed by a GM");

                    b.Property<string>("Conclusion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("conclusion")
                        .HasDefaultValueSql("''")
                        .HasComment("Assignee's final conclusion on this ticket");

                    b.Property<ulong>("Created")
                        .HasColumnType("bigint(40) unsigned")
                        .HasColumnName("created")
                        .HasComment("Timestamp: ticket created by a player");

                    b.Property<byte>("Level")
                        .HasColumnType("tinyint(1) unsigned")
                        .HasColumnName("level")
                        .HasComment("Ticket's security level");

                    b.Property<string>("Locale")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(4)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("locale")
                        .HasDefaultValueSql("'enUS'")
                        .HasComment("Player's client locale name");

                    b.Property<uint>("Mapid")
                        .HasColumnType("int(4) unsigned")
                        .HasColumnName("mapid")
                        .HasComment("Character's map identifier on submission");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10000)
                        .HasColumnType("varchar(10000)")
                        .HasColumnName("notes")
                        .HasDefaultValueSql("''")
                        .HasComment("Additional notes for GMs");

                    b.Property<float>("O")
                        .HasColumnType("float")
                        .HasColumnName("o")
                        .HasComment("Character's orientation angle on submission");

                    b.Property<ulong>("Seen")
                        .HasColumnType("bigint(40) unsigned")
                        .HasColumnName("seen")
                        .HasComment("Timestamp: ticket's last time opened by a GM");

                    b.Property<byte>("State")
                        .HasColumnType("tinyint(1) unsigned")
                        .HasColumnName("state")
                        .HasComment("Ticket's current state");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint(1) unsigned")
                        .HasColumnName("status")
                        .HasComment("Ticket's current status");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("text")
                        .HasComment("Ticket's message");

                    b.Property<ulong>("Updated")
                        .HasColumnType("bigint(40) unsigned")
                        .HasColumnName("updated")
                        .HasComment("Timestamp: ticket text's last update");

                    b.Property<float>("X")
                        .HasColumnType("float")
                        .HasColumnName("x")
                        .HasComment("Character's x coordinate on submission");

                    b.Property<float>("Y")
                        .HasColumnType("float")
                        .HasColumnName("y")
                        .HasComment("Character's y coordinate on submission");

                    b.Property<float>("Z")
                        .HasColumnType("float")
                        .HasColumnName("z")
                        .HasComment("Character's z coordinate on submission");

                    b.HasKey("Id");

                    b.ToTable("gm_tickets", (string)null);

                    b.HasComment("GM Tickets System");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.characters.Group", b =>
                {
                    b.Property<uint>("GroupId")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("groupId");

                    b.Property<byte>("Difficulty")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasColumnName("difficulty");

                    b.Property<uint>("Icon1")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("icon1");

                    b.Property<uint>("Icon2")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("icon2");

                    b.Property<uint>("Icon3")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("icon3");

                    b.Property<uint>("Icon4")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("icon4");

                    b.Property<uint>("Icon5")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("icon5");

                    b.Property<uint>("Icon6")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("icon6");

                    b.Property<uint>("Icon7")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("icon7");

                    b.Property<uint>("Icon8")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("icon8");

                    b.Property<byte>("IsRaid")
                        .HasColumnType("tinyint(1) unsigned")
                        .HasColumnName("isRaid");

                    b.Property<uint>("LeaderGuid")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("leaderGuid");

                    b.Property<byte>("LootMethod")
                        .HasColumnType("tinyint(4) unsigned")
                        .HasColumnName("lootMethod");

                    b.Property<byte>("LootThreshold")
                        .HasColumnType("tinyint(4) unsigned")
                        .HasColumnName("lootThreshold");

                    b.Property<uint>("LooterGuid")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("looterGuid");

                    b.Property<uint>("MainAssistant")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("mainAssistant");

                    b.Property<uint>("MainTank")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("mainTank");

                    b.HasKey("GroupId");

                    b.HasIndex(new[] { "LeaderGuid" }, "leaderGuid")
                        .IsUnique();

                    b.ToTable("groups", (string)null);

                    b.HasComment("Groups");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.characters.GroupInstance", b =>
                {
                    b.Property<uint>("LeaderGuid")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("leaderGuid");

                    b.Property<uint>("Instance")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("instance");

                    b.Property<byte>("Permanent")
                        .HasColumnType("tinyint(1) unsigned")
                        .HasColumnName("permanent");

                    b.HasKey("LeaderGuid", "Instance")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex(new[] { "Instance" }, "instance")
                        .HasDatabaseName("instance4");

                    b.ToTable("group_instance", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.characters.GroupMember", b =>
                {
                    b.Property<uint>("GroupId")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("groupId");

                    b.Property<uint>("MemberGuid")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("memberGuid");

                    b.Property<byte>("Assistant")
                        .HasColumnType("tinyint(1) unsigned")
                        .HasColumnName("assistant");

                    b.Property<ushort>("Subgroup")
                        .HasColumnType("smallint(6) unsigned")
                        .HasColumnName("subgroup");

                    b.HasKey("GroupId", "MemberGuid")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex(new[] { "MemberGuid" }, "Idx_memberGuid");

                    b.ToTable("group_member", (string)null);

                    b.HasComment("Groups");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.characters.Guild", b =>
                {
                    b.Property<uint>("Guildid")
                        .HasColumnType("int(6) unsigned")
                        .HasColumnName("guildid");

                    b.Property<int>("BackgroundColor")
                        .HasColumnType("int(5)");

                    b.Property<ulong>("BankMoney")
                        .HasColumnType("bigint(20) unsigned");

                    b.Property<int>("BorderColor")
                        .HasColumnType("int(5)");

                    b.Property<int>("BorderStyle")
                        .HasColumnType("int(5)");

                    b.Property<ulong>("Createdate")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("createdate");

                    b.Property<int>("EmblemColor")
                        .HasColumnType("int(5)");

                    b.Property<int>("EmblemStyle")
                        .HasColumnType("int(5)");

                    b.Property<string>("Info")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("info")
                        .HasDefaultValueSql("''");

                    b.Property<uint>("Leaderguid")
                        .HasColumnType("int(6) unsigned")
                        .HasColumnName("leaderguid");

                    b.Property<string>("Motd")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("motd")
                        .HasDefaultValueSql("''");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name")
                        .HasDefaultValueSql("''");

                    b.HasKey("Guildid");

                    b.ToTable("guild", (string)null);

                    b.HasComment("Guild System");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.characters.GuildBankEventlog", b =>
                {
                    b.Property<uint>("Guildid")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("guildid")
                        .HasComment("Guild Identificator");

                    b.Property<uint>("LogGuid")
                        .HasColumnType("int(11) unsigned")
                        .HasComment("Log record identificator - auxiliary column");

                    b.Property<byte>("TabId")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasComment("Guild bank TabId");

                    b.Property<byte>("DestTabId")
                        .HasColumnType("tinyint(1) unsigned")
                        .HasComment("Destination Tab Id");

                    b.Property<byte>("EventType")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasComment("Event type");

                    b.Property<uint>("ItemOrMoney")
                        .HasColumnType("int(11) unsigned");

                    b.Property<byte>("ItemStackCount")
                        .HasColumnType("tinyint(3) unsigned");

                    b.Property<uint>("PlayerGuid")
                        .HasColumnType("int(11) unsigned");

                    b.Property<ulong>("TimeStamp")
                        .HasColumnType("bigint(20) unsigned")
                        .HasComment("Event UNIX time");

                    b.HasKey("Guildid", "LogGuid", "TabId")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0, 0 });

                    b.HasIndex(new[] { "LogGuid" }, "Idx_LogGuid");

                    b.HasIndex(new[] { "PlayerGuid" }, "Idx_PlayerGuid");

                    b.ToTable("guild_bank_eventlog", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.characters.GuildBankItem", b =>
                {
                    b.Property<uint>("Guildid")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("guildid");

                    b.Property<byte>("TabId")
                        .HasColumnType("tinyint(1) unsigned");

                    b.Property<byte>("SlotId")
                        .HasColumnType("tinyint(3) unsigned");

                    b.Property<uint>("ItemEntry")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("item_entry");

                    b.Property<uint>("ItemGuid")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("item_guid");

                    b.HasKey("Guildid", "TabId", "SlotId")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0, 0 });

                    b.HasIndex(new[] { "ItemGuid" }, "Idx_item_guid");

                    b.ToTable("guild_bank_item", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.characters.GuildBankRight", b =>
                {
                    b.Property<uint>("Guildid")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("guildid");

                    b.Property<byte>("TabId")
                        .HasColumnType("tinyint(1) unsigned");

                    b.Property<uint>("Rid")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("rid");

                    b.Property<byte>("Gbright")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasColumnName("gbright");

                    b.Property<uint>("SlotPerDay")
                        .HasColumnType("int(11) unsigned");

                    b.HasKey("Guildid", "TabId", "Rid")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0, 0 });

                    b.ToTable("guild_bank_right", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.characters.GuildBankTab", b =>
                {
                    b.Property<uint>("Guildid")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("guildid");

                    b.Property<byte>("TabId")
                        .HasColumnType("tinyint(1) unsigned");

                    b.Property<string>("TabIcon")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasDefaultValueSql("''");

                    b.Property<string>("TabName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasDefaultValueSql("''");

                    b.Property<string>("TabText")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.HasKey("Guildid", "TabId")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.ToTable("guild_bank_tab", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.characters.GuildEventlog", b =>
                {
                    b.Property<uint>("Guildid")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("guildid")
                        .HasComment("Guild Identificator");

                    b.Property<uint>("LogGuid")
                        .HasColumnType("int(11) unsigned")
                        .HasComment("Log record identificator - auxiliary column");

                    b.Property<byte>("EventType")
                        .HasColumnType("tinyint(1) unsigned")
                        .HasComment("Event type");

                    b.Property<byte>("NewRank")
                        .HasColumnType("tinyint(2) unsigned")
                        .HasComment("New rank(in case promotion/demotion)");

                    b.Property<uint>("PlayerGuid1")
                        .HasColumnType("int(11) unsigned")
                        .HasComment("Player 1");

                    b.Property<uint>("PlayerGuid2")
                        .HasColumnType("int(11) unsigned")
                        .HasComment("Player 2");

                    b.Property<ulong>("TimeStamp")
                        .HasColumnType("bigint(20) unsigned")
                        .HasComment("Event UNIX time");

                    b.HasKey("Guildid", "LogGuid")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex(new[] { "LogGuid" }, "Idx_LogGuid")
                        .HasDatabaseName("Idx_LogGuid1");

                    b.HasIndex(new[] { "PlayerGuid1" }, "Idx_PlayerGuid1");

                    b.HasIndex(new[] { "PlayerGuid2" }, "Idx_PlayerGuid2");

                    b.ToTable("guild_eventlog", (string)null);

                    b.HasComment("Guild Eventlog");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.characters.GuildMember", b =>
                {
                    b.Property<uint>("BankRemMoney")
                        .HasColumnType("int(11) unsigned");

                    b.Property<uint>("BankRemSlotsTab0")
                        .HasColumnType("int(11) unsigned");

                    b.Property<uint>("BankRemSlotsTab1")
                        .HasColumnType("int(11) unsigned");

                    b.Property<uint>("BankRemSlotsTab2")
                        .HasColumnType("int(11) unsigned");

                    b.Property<uint>("BankRemSlotsTab3")
                        .HasColumnType("int(11) unsigned");

                    b.Property<uint>("BankRemSlotsTab4")
                        .HasColumnType("int(11) unsigned");

                    b.Property<uint>("BankRemSlotsTab5")
                        .HasColumnType("int(11) unsigned");

                    b.Property<uint>("BankResetTimeMoney")
                        .HasColumnType("int(11) unsigned");

                    b.Property<uint>("BankResetTimeTab0")
                        .HasColumnType("int(11) unsigned");

                    b.Property<uint>("BankResetTimeTab1")
                        .HasColumnType("int(11) unsigned");

                    b.Property<uint>("BankResetTimeTab2")
                        .HasColumnType("int(11) unsigned");

                    b.Property<uint>("BankResetTimeTab3")
                        .HasColumnType("int(11) unsigned");

                    b.Property<uint>("BankResetTimeTab4")
                        .HasColumnType("int(11) unsigned");

                    b.Property<uint>("BankResetTimeTab5")
                        .HasColumnType("int(11) unsigned");

                    b.Property<uint>("Guid")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("guid");

                    b.Property<uint>("Guildid")
                        .HasColumnType("int(6) unsigned")
                        .HasColumnName("guildid");

                    b.Property<string>("Offnote")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(31)
                        .HasColumnType("varchar(31)")
                        .HasColumnName("offnote")
                        .HasDefaultValueSql("''");

                    b.Property<string>("Pnote")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(31)
                        .HasColumnType("varchar(31)")
                        .HasColumnName("pnote")
                        .HasDefaultValueSql("''");

                    b.Property<byte>("Rank")
                        .HasColumnType("tinyint(2) unsigned")
                        .HasColumnName("rank");

                    b.HasIndex(new[] { "Guid" }, "guid_key")
                        .IsUnique();

                    b.HasIndex(new[] { "Guildid", "Rank" }, "guildid_rank_key");

                    b.ToTable("guild_member", (string)null);

                    b.HasComment("Guild System");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.characters.GuildRank", b =>
                {
                    b.Property<uint>("Guildid")
                        .HasColumnType("int(6) unsigned")
                        .HasColumnName("guildid");

                    b.Property<uint>("Rid")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("rid");

                    b.Property<uint>("BankMoneyPerDay")
                        .HasColumnType("int(11) unsigned");

                    b.Property<uint>("Rights")
                        .HasColumnType("int(3) unsigned")
                        .HasColumnName("rights");

                    b.Property<string>("Rname")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("rname")
                        .HasDefaultValueSql("''");

                    b.HasKey("Guildid", "Rid")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex(new[] { "Rid" }, "Idx_rid");

                    b.ToTable("guild_rank", (string)null);

                    b.HasComment("Guild System");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.characters.Instance", b =>
                {
                    b.Property<uint>("Id")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("id");

                    b.Property<string>("Data")
                        .HasColumnType("longtext")
                        .HasColumnName("data");

                    b.Property<byte>("Difficulty")
                        .HasColumnType("tinyint(1) unsigned")
                        .HasColumnName("difficulty");

                    b.Property<uint>("EncountersMask")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("encountersMask");

                    b.Property<uint>("Map")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("map");

                    b.Property<ulong>("Resettime")
                        .HasColumnType("bigint(40) unsigned")
                        .HasColumnName("resettime");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Map" }, "map");

                    b.HasIndex(new[] { "Resettime" }, "resettime");

                    b.ToTable("instance", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.characters.InstanceReset", b =>
                {
                    b.Property<uint>("Mapid")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("mapid");

                    b.Property<ulong>("Resettime")
                        .HasColumnType("bigint(40) unsigned")
                        .HasColumnName("resettime");

                    b.HasKey("Mapid")
                        .HasName("PRIMARY");

                    b.ToTable("instance_reset", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.characters.ItemInstance", b =>
                {
                    b.Property<uint>("Guid")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("guid");

                    b.Property<string>("Charges")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("charges");

                    b.Property<uint>("Count")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("count")
                        .HasDefaultValueSql("'1'");

                    b.Property<uint>("CreatorGuid")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("creatorGuid");

                    b.Property<uint>("Durability")
                        .HasColumnType("int(5) unsigned")
                        .HasColumnName("durability");

                    b.Property<uint>("Duration")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("duration");

                    b.Property<string>("Enchantments")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("enchantments");

                    b.Property<uint>("Flags")
                        .HasColumnType("int(8) unsigned")
                        .HasColumnName("flags");

                    b.Property<uint>("GiftCreatorGuid")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("giftCreatorGuid");

                    b.Property<uint>("ItemEntry")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("mediumint(8) unsigned")
                        .HasColumnName("itemEntry")
                        .HasDefaultValueSql("'0'");

                    b.Property<uint>("ItemTextId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("mediumint(8) unsigned")
                        .HasColumnName("itemTextId")
                        .HasDefaultValueSql("'0'");

                    b.Property<uint>("OwnerGuid")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("owner_guid");

                    b.Property<short>("RandomPropertyId")
                        .HasColumnType("smallint(5)")
                        .HasColumnName("randomPropertyId");

                    b.HasKey("Guid")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "OwnerGuid" }, "idx_owner_guid");

                    b.ToTable("item_instance", (string)null);

                    b.HasComment("Item System");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.characters.ItemLoot", b =>
                {
                    b.Property<uint>("Guid")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("guid");

                    b.Property<uint>("Itemid")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("itemid");

                    b.Property<uint>("Amount")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("amount");

                    b.Property<uint>("OwnerGuid")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("owner_guid");

                    b.Property<int>("Property")
                        .HasColumnType("int(11)")
                        .HasColumnName("property");

                    b.Property<uint>("Suffix")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("suffix");

                    b.HasKey("Guid", "Itemid")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex(new[] { "OwnerGuid" }, "idx_owner_guid")
                        .HasDatabaseName("idx_owner_guid1");

                    b.ToTable("item_loot", (string)null);

                    b.HasComment("Item System");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.characters.ItemText", b =>
                {
                    b.Property<uint>("Id")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("id");

                    b.Property<string>("Text")
                        .HasColumnType("longtext")
                        .HasColumnName("text");

                    b.HasKey("Id");

                    b.ToTable("item_text", (string)null);

                    b.HasComment("Item System");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.characters.Mail", b =>
                {
                    b.Property<uint>("Id")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("id")
                        .HasComment("Identifier");

                    b.Property<byte>("Checked")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasColumnName("checked");

                    b.Property<uint>("Cod")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("cod");

                    b.Property<ulong>("DeliverTime")
                        .HasColumnType("bigint(40) unsigned")
                        .HasColumnName("deliver_time");

                    b.Property<ulong>("ExpireTime")
                        .HasColumnType("bigint(40) unsigned")
                        .HasColumnName("expire_time");

                    b.Property<byte>("HasItems")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasColumnName("has_items");

                    b.Property<uint>("ItemTextId")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("itemTextId");

                    b.Property<uint>("MailTemplateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("mediumint(8) unsigned")
                        .HasColumnName("mailTemplateId")
                        .HasDefaultValueSql("'0'");

                    b.Property<byte>("MessageType")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasColumnName("messageType");

                    b.Property<uint>("Money")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("money");

                    b.Property<uint>("Receiver")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("receiver")
                        .HasComment("Character Global Unique Identifier");

                    b.Property<uint>("Sender")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("sender")
                        .HasComment("Character Global Unique Identifier");

                    b.Property<sbyte>("Stationery")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(3)")
                        .HasColumnName("stationery")
                        .HasDefaultValueSql("'41'");

                    b.Property<string>("Subject")
                        .HasColumnType("longtext")
                        .HasColumnName("subject");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Receiver" }, "idx_receiver");

                    b.ToTable("mail", (string)null);

                    b.HasComment("Mail System");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.characters.MailItem", b =>
                {
                    b.Property<int>("MailId")
                        .HasColumnType("int(11)")
                        .HasColumnName("mail_id");

                    b.Property<int>("ItemGuid")
                        .HasColumnType("int(11)")
                        .HasColumnName("item_guid");

                    b.Property<int>("ItemTemplate")
                        .HasColumnType("int(11)")
                        .HasColumnName("item_template");

                    b.Property<uint>("Receiver")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("receiver")
                        .HasComment("Character Global Unique Identifier");

                    b.HasKey("MailId", "ItemGuid")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex(new[] { "Receiver" }, "idx_receiver")
                        .HasDatabaseName("idx_receiver1");

                    b.ToTable("mail_items", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.characters.PetAura", b =>
                {
                    b.Property<uint>("Guid")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("guid")
                        .HasComment("Global Unique Identifier");

                    b.Property<ulong>("CasterGuid")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("caster_guid")
                        .HasComment("Full Global Unique Identifier");

                    b.Property<uint>("ItemGuid")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("item_guid");

                    b.Property<uint>("Spell")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("spell");

                    b.Property<int>("Basepoints0")
                        .HasColumnType("int(11)")
                        .HasColumnName("basepoints0");

                    b.Property<int>("Basepoints1")
                        .HasColumnType("int(11)")
                        .HasColumnName("basepoints1");

                    b.Property<int>("Basepoints2")
                        .HasColumnType("int(11)")
                        .HasColumnName("basepoints2");

                    b.Property<uint>("EffIndexMask")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("effIndexMask");

                    b.Property<int>("Maxduration")
                        .HasColumnType("int(11)")
                        .HasColumnName("maxduration");

                    b.Property<uint>("Periodictime0")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("periodictime0");

                    b.Property<uint>("Periodictime1")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("periodictime1");

                    b.Property<uint>("Periodictime2")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("periodictime2");

                    b.Property<uint>("Remaincharges")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("remaincharges");

                    b.Property<int>("Remaintime")
                        .HasColumnType("int(11)")
                        .HasColumnName("remaintime");

                    b.Property<uint>("Stackcount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("stackcount")
                        .HasDefaultValueSql("'1'");

                    b.HasKey("Guid", "CasterGuid", "ItemGuid", "Spell")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0, 0, 0 });

                    b.ToTable("pet_aura", (string)null);

                    b.HasComment("Pet System");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.characters.Petition", b =>
                {
                    b.Property<uint>("Ownerguid")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("ownerguid");

                    b.Property<uint>("Type")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("type");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name")
                        .HasDefaultValueSql("''");

                    b.Property<uint?>("Petitionguid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("petitionguid")
                        .HasDefaultValueSql("'0'");

                    b.HasKey("Ownerguid", "Type")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex(new[] { "Ownerguid", "Petitionguid" }, "index_ownerguid_petitionguid")
                        .IsUnique();

                    b.ToTable("petition", (string)null);

                    b.HasComment("Guild System");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.characters.PetitionSign", b =>
                {
                    b.Property<uint>("Petitionguid")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("petitionguid");

                    b.Property<uint>("Playerguid")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("playerguid");

                    b.Property<uint>("Ownerguid")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("ownerguid");

                    b.Property<uint>("PlayerAccount")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("player_account");

                    b.Property<uint>("Type")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("type");

                    b.HasKey("Petitionguid", "Playerguid")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex(new[] { "Ownerguid" }, "Idx_ownerguid");

                    b.HasIndex(new[] { "Playerguid" }, "Idx_playerguid");

                    b.ToTable("petition_sign", (string)null);

                    b.HasComment("Guild System");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.characters.PetSpell", b =>
                {
                    b.Property<uint>("Guid")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("guid")
                        .HasComment("Global Unique Identifier");

                    b.Property<uint>("Spell")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("spell")
                        .HasComment("Spell Identifier");

                    b.Property<uint>("Active")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("active");

                    b.HasKey("Guid", "Spell")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.ToTable("pet_spell", (string)null);

                    b.HasComment("Pet System");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.characters.PetSpellCooldown", b =>
                {
                    b.Property<uint>("Guid")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("guid")
                        .HasComment("Global Unique Identifier, Low part");

                    b.Property<uint>("Spell")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("spell")
                        .HasComment("Spell Identifier");

                    b.Property<ulong>("Time")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("time");

                    b.HasKey("Guid", "Spell")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.ToTable("pet_spell_cooldown", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.characters.PlayerbotSavedDatum", b =>
                {
                    b.Property<uint>("Guid")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("guid");

                    b.Property<uint>("AutoFollow")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("auto_follow")
                        .HasDefaultValueSql("'1'");

                    b.Property<bool>("Autoequip")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("autoequip");

                    b.Property<uint>("CombatDelay")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("combat_delay");

                    b.Property<byte>("CombatOrder")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasColumnName("combat_order");

                    b.Property<string>("Pname")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(12)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("pname")
                        .HasDefaultValueSql("''");

                    b.Property<uint>("PrimaryTarget")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("primary_target");

                    b.Property<uint>("SecondaryTarget")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("secondary_target");

                    b.Property<string>("Sname")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(12)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("sname")
                        .HasDefaultValueSql("''");

                    b.HasKey("Guid")
                        .HasName("PRIMARY");

                    b.ToTable("playerbot_saved_data", (string)null);

                    b.HasComment("Persistent Playerbot settings per alt");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.characters.PvpstatsBattleground", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("id");

                    b.Property<byte>("BracketId")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasColumnName("bracket_id");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime")
                        .HasColumnName("date");

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasColumnName("type");

                    b.Property<sbyte>("WinnerTeam")
                        .HasColumnType("tinyint(3)")
                        .HasColumnName("winner_team");

                    b.HasKey("Id");

                    b.ToTable("pvpstats_battlegrounds", (string)null);
                });

            modelBuilder.Entity("azuremyst.models.characters.PvpstatsPlayer", b =>
                {
                    b.Property<ulong>("BattlegroundId")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("battleground_id");

                    b.Property<uint>("CharacterGuid")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("character_guid");

                    b.Property<uint>("Attr1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("mediumint(8) unsigned")
                        .HasColumnName("attr_1")
                        .HasDefaultValueSql("'0'");

                    b.Property<uint>("Attr2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("mediumint(8) unsigned")
                        .HasColumnName("attr_2")
                        .HasDefaultValueSql("'0'");

                    b.Property<uint>("Attr3")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("mediumint(8) unsigned")
                        .HasColumnName("attr_3")
                        .HasDefaultValueSql("'0'");

                    b.Property<uint>("Attr4")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("mediumint(8) unsigned")
                        .HasColumnName("attr_4")
                        .HasDefaultValueSql("'0'");

                    b.Property<uint>("Attr5")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("mediumint(8) unsigned")
                        .HasColumnName("attr_5")
                        .HasDefaultValueSql("'0'");

                    b.Property<uint>("ScoreBonusHonor")
                        .HasColumnType("mediumint(8) unsigned")
                        .HasColumnName("score_bonus_honor");

                    b.Property<uint>("ScoreDamageDone")
                        .HasColumnType("mediumint(8) unsigned")
                        .HasColumnName("score_damage_done");

                    b.Property<uint>("ScoreDeaths")
                        .HasColumnType("mediumint(8) unsigned")
                        .HasColumnName("score_deaths");

                    b.Property<uint>("ScoreHealingDone")
                        .HasColumnType("mediumint(8) unsigned")
                        .HasColumnName("score_healing_done");

                    b.Property<uint>("ScoreHonorableKills")
                        .HasColumnType("mediumint(8) unsigned")
                        .HasColumnName("score_honorable_kills");

                    b.Property<uint>("ScoreKillingBlows")
                        .HasColumnType("mediumint(8) unsigned")
                        .HasColumnName("score_killing_blows");

                    b.HasKey("BattlegroundId", "CharacterGuid")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.ToTable("pvpstats_players", (string)null);
                });

            modelBuilder.Entity("azuremyst.models.characters.SavedVariable", b =>
                {
                    b.Property<uint>("CleaningFlags")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("cleaning_flags");

                    b.Property<ulong>("NextArenaPointDistributionTime")
                        .HasColumnType("bigint(40) unsigned");

                    b.Property<ulong>("NextDailyQuestResetTime")
                        .HasColumnType("bigint(40) unsigned");

                    b.Property<ulong>("NextMonthlyQuestResetTime")
                        .HasColumnType("bigint(40) unsigned");

                    b.Property<ulong>("NextWeeklyQuestResetTime")
                        .HasColumnType("bigint(40) unsigned");

                    b.ToTable("saved_variables", (string)null);

                    b.HasComment("Variable Saves");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.characters.World", b =>
                {
                    b.Property<uint>("Map")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("map");

                    b.Property<string>("Data")
                        .HasColumnType("longtext")
                        .HasColumnName("data");

                    b.HasKey("Map")
                        .HasName("PRIMARY");

                    b.ToTable("world", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.characters.WorldState", b =>
                {
                    b.Property<uint>("Id")
                        .HasColumnType("int(11) unsigned")
                        .HasComment("Internal save ID");

                    b.Property<string>("Data")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("world_state", (string)null);

                    b.HasComment("WorldState save system");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });
#pragma warning restore 612, 618
        }
    }
}
