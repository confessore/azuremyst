// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using azuremyst.contexts;

#nullable disable

namespace azuremyst.Migrations.LogsDb
{
    [DbContext(typeof(LogsDbContext))]
    [Migration("20220516211711_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_general_ci")
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("azuremyst.models.logs.LogsAnticheat", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("id");

                    b.Property<uint>("Account")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("account");

                    b.Property<uint?>("ActionMask")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("actionMask");

                    b.Property<uint>("Fingerprint")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("fingerprint");

                    b.Property<string>("Info")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("varchar(512)")
                        .HasColumnName("info");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("ip");

                    b.Property<string>("Player")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("player");

                    b.Property<uint>("Realm")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("realm");

                    b.Property<DateTime?>("Time")
                        .HasColumnType("datetime")
                        .HasColumnName("time");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Account" }, "account");

                    b.HasIndex(new[] { "Ip" }, "ip");

                    b.HasIndex(new[] { "Realm" }, "realm");

                    b.HasIndex(new[] { "Time" }, "time");

                    b.ToTable("logs_anticheat", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.logs.LogsDbVersion", b =>
                {
                    b.Property<ulong?>("RequiredS243301LogsAnticheat")
                        .HasColumnType("bit(1)")
                        .HasColumnName("required_s2433_01_logs_anticheat");

                    b.ToTable("logs_db_version", (string)null);

                    b.HasComment("Last applied sql update to DB");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.logs.LogsSpamdetect", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("id");

                    b.Property<int?>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("accountId")
                        .HasDefaultValueSql("'0'");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(8192)
                        .HasColumnType("varchar(8192)")
                        .HasColumnName("comment")
                        .HasDefaultValueSql("''");

                    b.Property<uint>("FromFingerprint")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("fromFingerprint");

                    b.Property<ulong?>("FromGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("fromGuid")
                        .HasDefaultValueSql("'0'");

                    b.Property<string>("FromIp")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("fromIP");

                    b.Property<uint>("Realm")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("realm");

                    b.Property<DateTime>("Time")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasColumnName("time")
                        .HasDefaultValueSql("current_timestamp()");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "FromGuid" }, "guid");

                    b.ToTable("logs_spamdetect", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });
#pragma warning restore 612, 618
        }
    }
}
