// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using azuremyst.contexts;

#nullable disable

namespace azuremyst.Migrations.AuthDb
{
    [DbContext(typeof(AuthDbContext))]
    [Migration("20220515234317_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_general_ci")
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("azuremyst.models.realmd.Account", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("id")
                        .HasComment("Identifier");

                    b.Property<uint>("ActiveRealmId")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("active_realm_id");

                    b.Property<string>("Email")
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<byte>("Expansion")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasColumnName("expansion");

                    b.Property<uint>("FailedLogins")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("failed_logins");

                    b.Property<uint>("Flags")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("flags");

                    b.Property<byte>("Gmlevel")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasColumnName("gmlevel");

                    b.Property<DateTime>("Joindate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasColumnName("joindate")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<string>("LastModule")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(32)
                        .HasColumnType("char(32)")
                        .HasColumnName("last_module")
                        .HasDefaultValueSql("''")
                        .IsFixedLength();

                    b.Property<string>("Locale")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(4)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("locale")
                        .HasDefaultValueSql("''");

                    b.Property<byte>("Locked")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasColumnName("locked");

                    b.Property<string>("LockedIp")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("lockedIp")
                        .HasDefaultValueSql("'0.0.0.0'");

                    b.Property<uint>("ModuleDay")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("mediumint(8) unsigned")
                        .HasColumnName("module_day")
                        .HasDefaultValueSql("'0'");

                    b.Property<ulong>("Mutetime")
                        .HasColumnType("bigint(40) unsigned")
                        .HasColumnName("mutetime");

                    b.Property<string>("Os")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(4)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("os")
                        .HasDefaultValueSql("'0'");

                    b.Property<string>("S")
                        .HasColumnType("longtext")
                        .HasColumnName("s");

                    b.Property<string>("Sessionkey")
                        .HasColumnType("longtext")
                        .HasColumnName("sessionkey");

                    b.Property<string>("Token")
                        .HasColumnType("text")
                        .HasColumnName("token");

                    b.Property<string>("Username")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("username")
                        .HasDefaultValueSql("''");

                    b.Property<string>("V")
                        .HasColumnType("longtext")
                        .HasColumnName("v");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Gmlevel" }, "idx_gmlevel");

                    b.HasIndex(new[] { "Username" }, "idx_username")
                        .IsUnique();

                    b.ToTable("account", (string)null);

                    b.HasComment("Account System");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.realmd.AccountBanned", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<int>("AccountId")
                        .HasColumnType("int(11)")
                        .HasColumnName("account_id")
                        .HasComment("Account id");

                    b.Property<sbyte>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("active")
                        .HasDefaultValueSql("'1'");

                    b.Property<long>("BannedAt")
                        .HasColumnType("bigint(40)")
                        .HasColumnName("banned_at");

                    b.Property<string>("BannedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("banned_by");

                    b.Property<long>("ExpiresAt")
                        .HasColumnType("bigint(40)")
                        .HasColumnName("expires_at");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("reason");

                    b.Property<long>("UnbannedAt")
                        .HasColumnType("bigint(40)")
                        .HasColumnName("unbanned_at");

                    b.Property<string>("UnbannedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("unbanned_by");

                    b.HasKey("Id");

                    b.ToTable("account_banned", (string)null);

                    b.HasComment("Ban List");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.realmd.AccountLogon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<uint>("AccountId")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("accountId");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("ip");

                    b.Property<uint>("LoginSource")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("loginSource");

                    b.Property<DateTime>("LoginTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp")
                        .HasColumnName("loginTime")
                        .HasDefaultValueSql("current_timestamp()");

                    b.HasKey("Id");

                    b.ToTable("account_logons", (string)null);
                });

            modelBuilder.Entity("azuremyst.models.realmd.AccountRaf", b =>
                {
                    b.Property<uint>("Referrer")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("referrer");

                    b.Property<uint>("Referred")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("referred");

                    b.HasKey("Referrer", "Referred")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.ToTable("account_raf", (string)null);
                });

            modelBuilder.Entity("azuremyst.models.realmd.AntispamBlacklist", b =>
                {
                    b.Property<string>("String")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("string");

                    b.HasKey("String")
                        .HasName("PRIMARY");

                    b.ToTable("antispam_blacklist", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.realmd.AntispamReplacement", b =>
                {
                    b.Property<string>("From")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("from")
                        .HasDefaultValueSql("''");

                    b.Property<string>("To")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("to")
                        .HasDefaultValueSql("''");

                    b.HasKey("From")
                        .HasName("PRIMARY");

                    b.ToTable("antispam_replacement", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.realmd.AntispamUnicodeReplacement", b =>
                {
                    b.Property<uint>("From")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("mediumint(5) unsigned")
                        .HasColumnName("from")
                        .HasDefaultValueSql("'0'");

                    b.Property<uint>("To")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("mediumint(5) unsigned")
                        .HasColumnName("to")
                        .HasDefaultValueSql("'0'");

                    b.HasKey("From")
                        .HasName("PRIMARY");

                    b.ToTable("antispam_unicode_replacement", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.realmd.IpBanned", b =>
                {
                    b.Property<string>("Ip")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("ip")
                        .HasDefaultValueSql("'0.0.0.0'");

                    b.Property<long>("BannedAt")
                        .HasColumnType("bigint(40)")
                        .HasColumnName("banned_at");

                    b.Property<string>("BannedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("banned_by")
                        .HasDefaultValueSql("'[Console]'");

                    b.Property<long>("ExpiresAt")
                        .HasColumnType("bigint(40)")
                        .HasColumnName("expires_at");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("reason")
                        .HasDefaultValueSql("'no reason'");

                    b.HasKey("Ip", "BannedAt")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.ToTable("ip_banned", (string)null);

                    b.HasComment("Banned IPs");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.realmd.Realmcharacter", b =>
                {
                    b.Property<uint>("Realmid")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("realmid");

                    b.Property<ulong>("Acctid")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("acctid");

                    b.Property<byte>("Numchars")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasColumnName("numchars");

                    b.HasKey("Realmid", "Acctid")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex(new[] { "Acctid" }, "acctid");

                    b.ToTable("realmcharacters", (string)null);

                    b.HasComment("Realm Character Tracker");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.realmd.RealmdDbVersion", b =>
                {
                    b.Property<ulong?>("RequiredS243301RealmdAnticheat")
                        .HasColumnType("bit(1)")
                        .HasColumnName("required_s2433_01_realmd_anticheat");

                    b.ToTable("realmd_db_version", (string)null);

                    b.HasComment("Last applied sql update to DB");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.realmd.Realmlist", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("address")
                        .HasDefaultValueSql("'127.0.0.1'");

                    b.Property<byte>("AllowedSecurityLevel")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasColumnName("allowedSecurityLevel");

                    b.Property<byte>("Icon")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasColumnName("icon");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("name")
                        .HasDefaultValueSql("''");

                    b.Property<float>("Population")
                        .HasColumnType("float unsigned")
                        .HasColumnName("population");

                    b.Property<int>("Port")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("port")
                        .HasDefaultValueSql("'8085'");

                    b.Property<string>("Realmbuilds")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("realmbuilds")
                        .HasDefaultValueSql("''");

                    b.Property<byte>("Realmflags")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(3) unsigned")
                        .HasColumnName("realmflags")
                        .HasDefaultValueSql("'2'")
                        .HasComment("Supported masks: 0x1 (invalid, not show in realm list), 0x2 (offline, set by mangosd), 0x4 (show version and build), 0x20 (new players), 0x40 (recommended)");

                    b.Property<byte>("Timezone")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasColumnName("timezone");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Name" }, "idx_name")
                        .IsUnique();

                    b.ToTable("realmlist", (string)null);

                    b.HasComment("Realm System");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.realmd.SystemFingerprintUsage", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("id");

                    b.Property<uint>("Account")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("account");

                    b.Property<uint?>("Activecpus")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("activecpus");

                    b.Property<string>("Architecture")
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("architecture");

                    b.Property<string>("Cputype")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("cputype");

                    b.Property<uint>("Fingerprint")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("fingerprint");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("ip");

                    b.Property<uint?>("Pagesize")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("pagesize");

                    b.Property<uint>("Realm")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("realm");

                    b.Property<DateTime?>("Time")
                        .HasColumnType("datetime")
                        .HasColumnName("time");

                    b.Property<uint?>("Totalcpus")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("totalcpus");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Account" }, "account");

                    b.HasIndex(new[] { "Fingerprint" }, "fingerprint");

                    b.HasIndex(new[] { "Ip" }, "ip");

                    b.ToTable("system_fingerprint_usage", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("azuremyst.models.realmd.Uptime", b =>
                {
                    b.Property<uint>("Realmid")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("realmid");

                    b.Property<ulong>("Starttime")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("starttime");

                    b.Property<ushort>("Maxplayers")
                        .HasColumnType("smallint(5) unsigned")
                        .HasColumnName("maxplayers");

                    b.Property<string>("Startstring")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("startstring")
                        .HasDefaultValueSql("''");

                    b.Property<ulong>("Uptime1")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("uptime");

                    b.HasKey("Realmid", "Starttime")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.ToTable("uptime", (string)null);

                    b.HasComment("Uptime system");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });
#pragma warning restore 612, 618
        }
    }
}
